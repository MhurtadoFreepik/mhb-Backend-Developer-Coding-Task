#!/bin/sh

STAGED_FILES_CMD=`git diff --cached --name-only --diff-filter=ACMR HEAD | grep \.php`
BAD_PHP_WORDS="^\s*(var_dump|dump).*\\(.*\\)|<<<<<<<<\W|>>>>>>>>\W|========\W$"

# Determine if a file list is passed
if [ "$#" -eq 1 ]
then
    oIFS=$IFS
    IFS='
    '
    SFILES="$1"
    IFS=$oIFS
fi
SFILES=${SFILES:-$STAGED_FILES_CMD}

echo "\n-- Checking PHP Lint..."
for FILE in $SFILES
do
    php -l -d display_errors=0 $FILE
    if [ $? != 0 ]
    then
        echo "Fix the error before commit."
        exit 1
    fi
    FILES="$FILES $FILE"
done

echo "\n-- Checking bad PHP words: var_dump, dump, ..."
for FILE in $SFILES
do
    grep -H -i -n -E "${BAD_PHP_WORDS}" $FILE
    if [ $? -eq 0 ]
    then
        echo "Fix the error before commit."
        exit 1
    fi
    FILES="$FILES $FILE"
done
echo "No bad PHP words detected"

# echo "\n-- Checking bad PHP words: $BAD_PHP_WORDS..."
# DIFF=$(git diff --cached --name-only -G "^\s*($BAD_PHP_WORDS).*\\(.*\\)|@TEMP\W|TODO\W|<<<<<<<<\W|>>>>>>>>\W|========\W$" | grep \.php);
# if [ ! -z "$DIFF" ]; then
#     echo "You've left a var_dump|dump|@TEMP|<<<<<|>>>>>|===== in one of your files!"
#     echo "File to fix: \033[0;31m$DIFF\033[0m \n";
#     exit 1
# else
#     echo "No bad PHP words detected"
# fi

# Check Code Sniffer
if [ "$FILES" != "" ]
then
    echo "\n-- Running Code Sniffer. Code standard PSR2 and some extra rules."
    ./vendor/bin/phpcs -s --standard=ruleset.xml -n -p $FILES
    if [ $? != 0 ]
    then
        echo "Fix the error before commit!"
        # echo "Run"
        # echo "  ./vendor/bin/phpcbf --standard=ruleset.xml $FILES"
        # echo "for automatic fix or fix it manually."
        exit 1
    fi
fi

exit $?
